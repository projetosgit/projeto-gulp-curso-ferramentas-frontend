{"version":3,"sources":["getStudents.js","getMedia.js","getRandomNumber.js","app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["const getStudents = async () => {\r\n    const url_json = 'https://serfrontend.com/fakeapi/alunos.json'\r\n    const response = await fetch(url_json)\r\n    let data = await response.json()\r\n\r\n    data.map( (s) => {            \r\n        s.media = parseFloat(getMedia(...s.notas) )\r\n    })        \r\n    \r\n    if (response.status !== 200) {\r\n        throw Error(data.detail);\r\n    }\r\n    return data\r\n    \r\n} ","function getMedia(){\r\n    let notas = Array.from(arguments)\r\n    let media = (notas.reduce( (current, sum) => {\r\n        return current + sum\r\n    }) / notas.length)         \r\n    return media.toFixed(2)\r\n}","const getRandonNumber = (min, max) => {\r\n    let r = Math.random() * (max2 - min + 1) + min;\r\n    return parseInt(r)\r\n}",";(function(){\r\n\r\n    let students = null    \r\n\r\n    const init = (_students) => {\r\n        students = _students        \r\n        createDomIntoTable(_students)\r\n        addListenerToButton()\r\n    }\r\n\r\n    const createDomIntoTable = (students) => {\r\n        \r\n        const str = students.map( (student, i) => {            \r\n            return `\r\n            <tr>\r\n                <td>${student.nome}</td>\r\n                ${\r\n                    student.notas.map( nota => `<td> ${nota} </td>`).join('')\r\n                }\r\n                <td>${getMedia(...student.notas)} </td>\r\n            </tr>\r\n            `\r\n        } ).join('')\r\n        document.querySelector('#content-students').innerHTML = str\r\n    }\r\n\r\n\r\n    const createDomIntoList = (luckyStudents) =>{\r\n        const str = luckyStudents.map( s => {            \r\n            return `\r\n                <li class=\"list-group-item\" id=\"student-${s.i}\">${s.nome} <span style=\"float:right\">${s.media} </span></li>\r\n            `\r\n        }).join('')\r\n\r\n        document.querySelector('#results ul').innerHTML = str        \r\n    }\r\n\r\n    const addListenerToButton = function(){        \r\n        const $btn = document.querySelector('#btn-init')\r\n        $btn.removeAttribute('disabled')\r\n        $btn.addEventListener('click', e => {\r\n            const _students = Array.from(students)\r\n            let luckyStudents = []\r\n            \r\n            while(luckyStudents.length < 5){\r\n                let nRandon = getRandonNumber(0, _students.length - 1)\r\n                \r\n                let student = _students.splice(nRandon, 1)\r\n                luckyStudents.push(student[0])\r\n            }\r\n\r\n            let medias = [] \r\n\r\n            luckyStudents.map( (ls, i) => {\r\n                medias[i] = ls.media\r\n                ls.i = i\r\n                return ls;\r\n            })\r\n\r\n            createDomIntoList(luckyStudents)\r\n\r\n            const maxValue = Math.max(...medias)\r\n\r\n            const studentsWinner = luckyStudents.filter( (student, i) => {\r\n                return student.media === maxValue\r\n            })\r\n\r\n            if(studentsWinner.length === 1){\r\n                showsTheWinner(studentsWinner[0])\r\n            } else {\r\n                let nLucky = getRandonNumber(0, studentsWinner.length - 1)\r\n                showsTheWinner(studentsWinner[nLucky])\r\n            }\r\n        })\r\n    }\r\n\r\n    const showsTheWinner = (luckyStudent) => {\r\n        document.querySelector(`#student-${luckyStudent.i}`).style.backgroundColor = 'green'\r\n    }\r\n    \r\n    getStudents()\r\n        .then(students => init(students))\r\n        .catch(err => console.error(err))\r\n})()"]}